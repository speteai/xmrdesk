name: Release XMRDesk

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  release:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2

    - name: Install Qt6
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.6.*'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        tools: 'tools_cmake'
        cache: true
        setup-python: false

    - name: Install dependencies
      run: |
        vcpkg install libuv:x64-windows
        vcpkg integrate install

    - name: Create build directory
      run: mkdir build

    - name: Configure CMake
      working-directory: build
      run: |
        cmake .. -G "Visual Studio 17 2022" -A x64 ^
          -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake ^
          -DVCPKG_TARGET_TRIPLET=x64-windows ^
          -DCMAKE_PREFIX_PATH="${{ env.Qt6_DIR }}" ^
          -DWITH_QT_GUI=ON ^
          -DWITH_HWLOC=OFF ^
          -DWITH_OPENCL=OFF ^
          -DWITH_CUDA=OFF ^
          -DWITH_RANDOMX=ON ^
          -DWITH_HTTP=ON ^
          -DWITH_TLS=OFF ^
          -DCMAKE_BUILD_TYPE=Release

    - name: Build
      working-directory: build
      run: cmake --build . --config Release

    - name: Deploy Qt
      working-directory: build/Release
      run: |
        windeployqt.exe --qmldir ../../src/gui xmrdesk.exe

    - name: Create release package
      run: |
        mkdir xmrdesk-release
        robocopy build\Release xmrdesk-release /E /XF *.pdb *.ilk
        copy README.md xmrdesk-release\
        copy LICENSE xmrdesk-release\
        echo @echo off > xmrdesk-release\start-gui.bat
        echo echo XMRDesk - Monero Mining GUI >> xmrdesk-release\start-gui.bat
        echo echo Starting GUI version... >> xmrdesk-release\start-gui.bat
        echo start xmrdesk.exe >> xmrdesk-release\start-gui.bat
        echo @echo off > xmrdesk-release\start-console.bat
        echo echo XMRDesk - Console Mining >> xmrdesk-release\start-console.bat
        echo echo Starting console version... >> xmrdesk-release\start-console.bat
        echo xmrdesk.exe --no-gui >> xmrdesk-release\start-console.bat

    - name: Create ZIP archive
      run: |
        7z a xmrdesk-windows-x64.zip xmrdesk-release\*

    - name: Get version
      id: version
      run: |
        if ("${{ github.event.inputs.version }}" -ne "") {
          echo "version=${{ github.event.inputs.version }}" >> $env:GITHUB_OUTPUT
        } else {
          $tag = "${{ github.ref }}".Replace("refs/tags/", "")
          echo "version=$tag" >> $env:GITHUB_OUTPUT
        }

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: XMRDesk ${{ steps.version.outputs.version }}
        body: |
          ## XMRDesk Release ${{ steps.version.outputs.version }}

          High-performance Monero miner with beautiful Qt6 GUI interface for Windows!

          ### ✨ Features:
          - 🎯 **Beautiful Qt6 GUI** with real-time monitoring
          - 📊 **Live hashrate charts** with 60-second history
          - 🌡️ **CPU temperature monitoring** with color indicators
          - ⚡ **Pre-configured mining pools** (SupportXMR, Qubic, Nanopool)
          - 🎮 **Easy wallet configuration** via GUI
          - 📱 **Professional interface** designed for desktop users

          ### 🚀 Installation (Windows):
          1. Download and extract the ZIP file
          2. **GUI Mode:** Double-click `start-gui.bat` or run `xmrdesk.exe` directly
          3. **Console Mode:** Run `start-console.bat` for command-line interface
          4. Configure your XMR wallet address in the GUI
          5. Select a mining pool and start mining!

          ### 🏊 Supported Mining Pools:
          - **SupportXMR.com** (Recommended)
          - **Qubic.org**
          - **Nanopool.org**

          ### 📋 System Requirements:
          - Windows 10/11 (64-bit)
          - No additional software needed - all Qt6 DLLs included!

          **🎉 This release includes the full Qt6 GUI version for Windows!**
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./xmrdesk-windows-x64.zip
        asset_name: xmrdesk-windows-x64.zip
        asset_content_type: application/zip